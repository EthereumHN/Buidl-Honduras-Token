{
  "contractName": "SwagNFT",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "createSwag",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport '../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol';\nimport '../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol';\nimport '../node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol';\nimport '../node_modules/openzeppelin-solidity/contracts/drafts/Counter.sol';\n\ncontract SwagNFT is ERC721Full, IERC721Receiver{\n    using Counter for Counter.Counter;\n    Counter.Counter private tokenId;\n\n    constructor(\n        string memory name,\n        string memory symbol\n    )\n        ERC721Full(name, symbol)\n        public\n    {}\n\n    function createSwag(\n        string memory tokenURI\n    )\n        public\n        returns (bool)\n    {\n        uint256 swagId = tokenId.next();\n        _mint(msg.sender, swagId);\n        _setTokenURI(swagId, tokenURI);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/crisgarner/Projects/community/community-token/contracts/SwagNFT.sol",
  "ast": {
    "absolutePath": "/Users/crisgarner/Projects/community/community-token/contracts/SwagNFT.sol",
    "exportedSymbols": {
      "SwagNFT": [
        147
      ]
    },
    "id": 148,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 94,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2093,
        "src": "25:85:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2248,
        "src": "111:89:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2417,
        "src": "201:90:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/drafts/Counter.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/drafts/Counter.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 368,
        "src": "292:76:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2092,
              "src": "390:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2092",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "390:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "IERC721Receiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2416,
              "src": "402:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Receiver_$2416",
                "typeString": "contract IERC721Receiver"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "402:15:2"
          }
        ],
        "contractDependencies": [
          418,
          428,
          1733,
          2068,
          2092,
          2219,
          2350,
          2377,
          2400,
          2416
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 147,
        "linearizedBaseContracts": [
          147,
          2416,
          2092,
          2219,
          2400,
          2068,
          2377,
          1733,
          2350,
          418,
          428
        ],
        "name": "SwagNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 105,
            "libraryName": {
              "contractScope": null,
              "id": 103,
              "name": "Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 367,
              "src": "429:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$367",
                "typeString": "library Counter"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "423:34:2",
            "typeName": {
              "contractScope": null,
              "id": 104,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 349,
              "src": "441:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$349_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 107,
            "name": "tokenId",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "462:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$349_storage",
              "typeString": "struct Counter.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 106,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 349,
              "src": "462:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$349_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "628:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 119,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 114,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109,
                    "src": "595:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 115,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "601:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2092,
                  "src": "584:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2092_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "584:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "521:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "549:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:64:2"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:2"
            },
            "scope": 147,
            "src": "500:130:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "736:144:2",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "swagId",
                      "nodeType": "VariableDeclaration",
                      "scope": 145,
                      "src": "746:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "746:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "763:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$349_storage",
                          "typeString": "struct Counter.Counter storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "next",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "763:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$349_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$349_storage_ptr_$",
                        "typeString": "function (struct Counter.Counter storage pointer) returns (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2450,
                          "src": "793:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "793:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "swagId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "805:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 132,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1875
                      ],
                      "referencedDeclaration": 1875,
                      "src": "787:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "787:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "swagId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "835:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "843:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "822:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "822:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "869:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 125,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "862:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSwag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "665:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:38:2"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "726:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:6:2"
            },
            "scope": 147,
            "src": "636:244:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 148,
        "src": "370:512:2"
      }
    ],
    "src": "0:883:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/crisgarner/Projects/community/community-token/contracts/SwagNFT.sol",
    "exportedSymbols": {
      "SwagNFT": [
        147
      ]
    },
    "id": 148,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 94,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2093,
        "src": "25:85:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol",
        "id": 96,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2248,
        "src": "111:89:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 97,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 2417,
        "src": "201:90:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/crisgarner/Projects/community/community-token/node_modules/openzeppelin-solidity/contracts/drafts/Counter.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/drafts/Counter.sol",
        "id": 98,
        "nodeType": "ImportDirective",
        "scope": 148,
        "sourceUnit": 368,
        "src": "292:76:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 99,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2092,
              "src": "390:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$2092",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 100,
            "nodeType": "InheritanceSpecifier",
            "src": "390:10:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 101,
              "name": "IERC721Receiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2416,
              "src": "402:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Receiver_$2416",
                "typeString": "contract IERC721Receiver"
              }
            },
            "id": 102,
            "nodeType": "InheritanceSpecifier",
            "src": "402:15:2"
          }
        ],
        "contractDependencies": [
          418,
          428,
          1733,
          2068,
          2092,
          2219,
          2350,
          2377,
          2400,
          2416
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 147,
        "linearizedBaseContracts": [
          147,
          2416,
          2092,
          2219,
          2400,
          2068,
          2377,
          1733,
          2350,
          418,
          428
        ],
        "name": "SwagNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 105,
            "libraryName": {
              "contractScope": null,
              "id": 103,
              "name": "Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 367,
              "src": "429:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counter_$367",
                "typeString": "library Counter"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "423:34:2",
            "typeName": {
              "contractScope": null,
              "id": 104,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 349,
              "src": "441:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$349_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 107,
            "name": "tokenId",
            "nodeType": "VariableDeclaration",
            "scope": 147,
            "src": "462:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$349_storage",
              "typeString": "struct Counter.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 106,
              "name": "Counter.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 349,
              "src": "462:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$349_storage_ptr",
                "typeString": "struct Counter.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "628:2:2",
              "statements": []
            },
            "documentation": null,
            "id": 119,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 114,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 109,
                    "src": "595:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 115,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 111,
                    "src": "601:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 113,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2092,
                  "src": "584:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$2092_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "584:24:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 109,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "521:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 111,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "549:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "511:64:2"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:2"
            },
            "scope": 147,
            "src": "500:130:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "736:144:2",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "name": "swagId",
                      "nodeType": "VariableDeclaration",
                      "scope": 145,
                      "src": "746:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "746:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 131,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 128,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "763:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$349_storage",
                          "typeString": "struct Counter.Counter storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "next",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 366,
                      "src": "763:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$349_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$349_storage_ptr_$",
                        "typeString": "function (struct Counter.Counter storage pointer) returns (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "763:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:31:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2450,
                          "src": "793:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "793:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "swagId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "805:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 132,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1875
                      ],
                      "referencedDeclaration": 1875,
                      "src": "787:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "787:25:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "swagId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "835:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 140,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 121,
                        "src": "843:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2188,
                      "src": "822:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "822:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "822:30:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "869:4:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 125,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "862:11:2"
                }
              ]
            },
            "documentation": null,
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSwag",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "665:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "665:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:38:2"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "726:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "725:6:2"
            },
            "scope": 147,
            "src": "636:244:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 148,
        "src": "370:512:2"
      }
    ],
    "src": "0:883:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-17T00:19:35.514Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "The ERC721 smart contract calls this function on the recipient after a `safeTransfer`. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onERC721Received.selector`. This function MAY throw to revert and reject the transfer. Note: the ERC721 contract address is always the message sender.",
        "params": {
          "data": "Additional data with no specified format",
          "from": "The address which previously owned the token",
          "operator": "The address which called `safeTransferFrom` function",
          "tokenId": "The NFT identifier which is being transferred"
        },
        "return": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}